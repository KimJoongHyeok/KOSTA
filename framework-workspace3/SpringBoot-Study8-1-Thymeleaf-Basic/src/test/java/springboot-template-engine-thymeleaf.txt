**Template Engine : Thymeleaf**
SpringBoot 에서 지원하는 템플릿 엔진 

Thymeleaf : 유지보수성이 높은 템플릿 생성 방법을 제공하고 
HTML의 구조상에서 개발하여 기존 HTML 코드를 변경하지 않고  개발하는 방식(Natural Templates)으로  
디자인 팀과 개발 팀 간의 협업이 보다 용이해짐

Thymeleaf 와 유사한 템플릿 엔진 : jsp(jstl) , freemaker , mustache , groovy 등이 있다 

**SpringBoot 기반 Template Engine : Thymeleaf 개발단계**


0. 프로젝트 생성 	
    New Spring Starter Project Dependencies 
    Spring Boot DevTools 
    MyBatis Framework 
    Thymeleaf
    Spring Web 
    
    
    Maven pom.xml 
	템플릿 레이아웃을 위해 아래 라이브러리를 추가한다 
	<dependency>
		<groupId>nz.net.ultraq.thymeleaf</groupId>
		<artifactId>thymeleaf-layout-dialect</artifactId>
	</dependency>


1. Eclipse MarketPlace 에서  thymeleaf 를 검색해서 개발도구를 설치한다 
   프로젝트 마.오 - configure - add thymeleaf nature
   									 add tern nature 	 
 
2. application.properties 에서 
port , dbcp , mybatis 설정한다 
Thymeleaf Template Engine은 기본 설정되므로 별도로 설정을 추가할 것은 없다 

3. view 정보는 src\main\resources\templates 아래에 html 확장자로 작성한다 
    Controller 와 Model은 기존과 동일하다 
    
4. SpringBoot app 실행 후 localhost:7777 로 접근해서 테스트해본다    
    
    
참고)     
 Spring Legacy 에서는 다음과 같이 xml 형식으로 설정할 수 있다. 
 SpringBoot 에서는 자동설정된다(src\main\resources\templates 아래에 위치시키면 된다)  
 
  <beans:bean id="templateResolver"  class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
    <beans:property name="prefix" value="/WEB-INF/views/" />
    <beans:property name="suffix" value=".html" />
    <beans:property name="templateMode" value="HTML5" />
</beans:bean>
<beans:bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
    <beans:property name="templateResolver" ref="templateResolver" />
</beans:bean>
<beans:bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
    <beans:property name="templateEngine" ref="templateEngine" />
</beans:bean>

    
    
    
    
    
    